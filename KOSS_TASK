Container- Like in OOP, objects are images of their class, a containers is an image that contains packages of softwares, containing everything like libraries and dependencies needed to run an application.
Cgroups- Control groups(or Cgroups) are a feature of linux kernel that helps us to limit and distribute the resources among different processes. It gives Docker the ability to allocate things to the containers.
Namespaces are a feature of the Linux kernel that partitions kernel resources such that one set of processes sees one set of resources and another set of processes sees a different set of resources. Thus Docker uses namespaces to provide this isolation to the containers from the host.
We use cgroups and namespaces to create an independent process and limit the resource it can use.
The Docker Ecosystem- 1)containerd is a container runtime that manages the lifecycle of a container on a physical or virtual machine (a host). It is a daemon process that creates, starts, stops, and destroys containers. It is also able to pull container images from container registries, mount storage, and enable networking for a container. Containerd is an example of a low-level container engine, with only basic functionality, suitable for use by automated mechanisms. 2)Docker Engine is an example of a high-level container engine primarily used by developers. It manages the entire container lifecycle from creating and storing images to running a container, network attachments, and so on. It can be deployed as a container or installed directly on the host machine. Docker Engine is a client-server application. 3)runC is a CLI tool for spawning and running containers according to the OCI specification. It is a lightweight portable low level runtime. When containerd needs to form a container, it tells runc to do that. 
4) Swarm is a cluster manager for Docker. It allows you to expose several Docker hosts behind a single Docker API endpoint. From the client side everything looks identical to a single-host setup, but Swarm can manage multiple hosts and schedule the containers on them. 5)  Compose is way to describe a multicontainer application in a single YAML file.
6) Rancher is an orchestrator that has very interesting capabilities like multi-data-center networking, load-balancing and an integration with Docker Compose. 7)Registrator helps to detect large number of containers and registers them in a data store. This data store can then be queried to locate services and make sure your application keeps on running. 8)Docker Hub is a cloud-based registry service that allows you to link to code repositories, build and test images, store manually pushed images, and link to Docker Cloud so you can deploy images to your hosts. 
9) Docker Slim optimizes the Docker image and the resulting container by reducing the image to the files, libraries, executables, and dependencies necessary for the containers' regular operation. This optimizes your development process, reducing bloat from the containers, making them smaller and more efficient. 10) Ryuk helps to remove containers/networks/volumes/images by given filter after specified delay.
